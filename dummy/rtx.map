
Allocating common symbols
Common symbol       size              file

p                   0xcc              main_rtx.o
blocked_queue       0x18              process.o
old_stack           0x4               /tmp/ccLy1Tmf.o
ready_queue         0x14              process.o
free_blocks         0x4               process.o
main_stack          0x1000            /tmp/ccLy1Tmf.o
mem_end             0x4               memory.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccLy1Tmf.o
LOAD process.o
LOAD init.o
LOAD memory.o
LOAD dbug.o
LOAD rtx.o
LOAD main_rtx.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000     0x1807
 *(.text)
 .text          0x10100000       0x1e /tmp/ccLy1Tmf.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020      0x7d2 process.o
                0x10100746                is_waiting_for
                0x10100020                release_processor_kuma_san
                0x101007a6                set_process_state
                0x10100700                process_exists
                0x101006d0                get_process_priority_usagi_san
                0x10100664                get_process_from_ID
                0x10100342                schedule_next_process
                0x101006be                get_process_ID
                0x101007cc                set_process_to_run
 *fill*         0x101007f2        0x2 00
 .text          0x101007f4      0x41e init.o
                0x10100a0c                push_down_first_night
                0x101008ae                put_to_blocked
                0x10100a72                push_test
                0x101007f4                put_to_ready
                0x101009bc                pop
                0x1010096c                remove_from_blocked
                0x10100a60                pop_test
                0x1010092c                remove_from_ready
                0x101009e6                push
 *fill*         0x10100c12        0x2 00
 .text          0x10100c14      0x270 memory.o
                0x10100c7a                s_release_memory_block
                0x10100c14                s_request_memory_block
                0x10100d7a                initBlock
 .text          0x10100e84       0x5c dbug.o
                0x10100ea4                rtx_dbug_outs
                0x10100e84                rtx_dbug_out_char
 .text          0x10100ee0       0xcc rtx.o
                0x10100f8a                get_process_priority
                0x10100f0e                request_memory_block
                0x10100f72                set_process_priority
                0x10100ee0                send_message
                0x10100f26                release_memory_block
                0x10100ef8                receive_message
                0x10100f5a                delayed_send
                0x10100f3e                release_processor
 .text          0x10100fac      0x2f4 main_rtx.o
                0x10100fac                __main
                0x10100fb6                main
                0x101012a0                . = ALIGN (0x4)
                0x101012a0                __CTOR_LIST__ = .
                0x101012a0        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x101012a4        0x4 LONG 0x0
                0x101012a8                __CTOR_END__ = .
                0x101012a8                __DTOR_LIST__ = .
                0x101012a8        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x101012ac        0x4 LONG 0x0
                0x101012b0                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x101012b0      0x25e process.o
 .rodata        0x1010150e       0xc0 init.o
 .rodata        0x101015ce       0x7c memory.o
                0x101015cf                FREE
                0x101015d1                FAILURE
                0x101015d0                SUCCESS
                0x101015ce                USED
 .rodata        0x1010164a       0xd0 rtx.o
 .rodata        0x1010171a       0xdd main_rtx.o
 *(.gcc_except_table)
                0x101017f7                __INIT_SECTION__ = .
                0x101017f7        0x4 LONG 0x4e560000
 *(.init)
                0x101017fb        0x2 SHORT 0x4e5e
                0x101017fd        0x2 SHORT 0x4e75
                0x101017ff                __FINI_SECTION__ = .
                0x101017ff        0x4 LONG 0x4e560000
 *(.fini)
                0x10101803        0x2 SHORT 0x4e5e
                0x10101805        0x2 SHORT 0x4e75
                0x10101807                _etext = .
 *(.lit)

.data           0x10101808        0x0
 *(.shdata)
 *(.data)
 .data          0x10101808        0x0 /tmp/ccLy1Tmf.o
 .data          0x10101808        0x0 process.o
 .data          0x10101808        0x0 init.o
 .data          0x10101808        0x0 memory.o
 .data          0x10101808        0x0 dbug.o
 .data          0x10101808        0x0 rtx.o
 .data          0x10101808        0x0 main_rtx.o
                0x10101808                _edata = .

.bss            0x10101808     0x1128
                0x10101808                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10101808        0x0 /tmp/ccLy1Tmf.o
 .bss           0x10101808        0x8 process.o
                0x10101808                current_running_process
                0x1010180c                imma_epeen_process
 .bss           0x10101810        0x4 init.o
                0x10101810                used_blocks
 .bss           0x10101814        0x0 memory.o
 .bss           0x10101814        0x0 dbug.o
 .bss           0x10101814        0x0 rtx.o
 .bss           0x10101814        0x0 main_rtx.o
 *(COMMON)
 *fill*         0x10101814        0xc 00
 COMMON         0x10101820     0x1010 /tmp/ccLy1Tmf.o
                0x10101820                old_stack
                0x10101830                main_stack
 COMMON         0x10102830       0x30 process.o
                0x10102830                blocked_queue
                0x10102848                ready_queue
                0x1010285c                free_blocks
 COMMON         0x10102860        0x4 memory.o
                0x10102860                mem_end
 COMMON         0x10102864       0xcc main_rtx.o
                0x10102864                p
                0x10102930                _end = ALIGN (0x8)
                0x10102930                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000       0x84
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
 __REGISTER_RTX__
                0x10300000       0x84 main_rtx.o
                0x10300000                register_rtx
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
                0x10500000       0x5c
 *(__RTX_TEST_DATA__)
 __RTX_TEST_DATA__
                0x10500000       0x5c main_rtx.o
                0x10500020                g_test_proc
                0x10500000                g_test_fixture
OUTPUT(rtx.bin elf32-m68k)

.comment        0x00000000       0xea
 .comment       0x00000000       0x27 process.o
 .comment       0x00000027       0x27 init.o
 .comment       0x0000004e       0x27 memory.o
 .comment       0x00000075       0x27 dbug.o
 .comment       0x0000009c       0x27 rtx.o
 .comment       0x000000c3       0x27 main_rtx.o
