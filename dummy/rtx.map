
Allocating common symbols
Common symbol       size              file

p                   0xe4              main_rtx.o
blocked_queue       0x18              process.o
old_stack           0x4               /tmp/ccbWAC0e.o
ready_queue         0x14              process.o
free_blocks         0x4               process.o
main_stack          0x1000            /tmp/ccbWAC0e.o
mem_end             0x4               memory.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccbWAC0e.o
LOAD process.o
LOAD init.o
LOAD memory.o
LOAD dbug.o
LOAD rtx.o
LOAD main_rtx.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000     0x1383
 *(.text)
 .text          0x10100000       0x1e /tmp/ccbWAC0e.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020      0x3b2 process.o
                0x10100326                is_waiting_for
                0x10100020                release_processor_kuma_san
                0x10100386                set_process_state
                0x101002e2                process_exists
                0x101002b2                get_process_priority_usagi_san
                0x1010024c                get_process_from_ID
                0x10100114                schedule_next_process
                0x101002a0                get_process_ID
                0x101003ac                set_process_to_run
 *fill*         0x101003d2        0x2 00
 .text          0x101003d4      0x418 init.o
                0x101005ec                push_down_first_night
                0x1010048e                put_to_blocked
                0x1010064c                push_test
                0x101003d4                put_to_ready
                0x1010059c                pop
                0x1010054c                remove_from_blocked
                0x1010063a                pop_test
                0x1010050c                remove_from_ready
                0x101005c6                push
 .text          0x101007ec      0x270 memory.o
                0x10100852                s_release_memory_block
                0x101007ec                s_request_memory_block
                0x10100952                initBlock
 .text          0x10100a5c       0x5c dbug.o
                0x10100a7c                rtx_dbug_outs
                0x10100a5c                rtx_dbug_out_char
 .text          0x10100ab8       0xfc rtx.o
                0x10100b92                get_process_priority
                0x10100ae6                request_memory_block
                0x10100b7a                set_process_priority
                0x10100ab8                send_message
                0x10100afe                release_memory_block
                0x10100ad0                receive_message
                0x10100b62                delayed_send
                0x10100b16                release_processor
 .text          0x10100bb4      0x43a main_rtx.o
                0x10100bb4                __main
                0x10100bbe                main
                0x10100ff0                . = ALIGN (0x4)
 *fill*         0x10100fee        0x2 00
                0x10100ff0                __CTOR_LIST__ = .
                0x10100ff0        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10100ff4        0x4 LONG 0x0
                0x10100ff8                __CTOR_END__ = .
                0x10100ff8                __DTOR_LIST__ = .
                0x10100ff8        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10100ffc        0x4 LONG 0x0
                0x10101000                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10101000       0xb7 process.o
 .rodata        0x101010b7       0xc0 init.o
 .rodata        0x10101177       0x7c memory.o
                0x10101178                FREE
                0x1010117a                FAILURE
                0x10101179                SUCCESS
                0x10101177                USED
 .rodata        0x101011f3       0xd8 rtx.o
 .rodata        0x101012cb       0xa8 main_rtx.o
 *(.gcc_except_table)
                0x10101373                __INIT_SECTION__ = .
                0x10101373        0x4 LONG 0x4e560000
 *(.init)
                0x10101377        0x2 SHORT 0x4e5e
                0x10101379        0x2 SHORT 0x4e75
                0x1010137b                __FINI_SECTION__ = .
                0x1010137b        0x4 LONG 0x4e560000
 *(.fini)
                0x1010137f        0x2 SHORT 0x4e5e
                0x10101381        0x2 SHORT 0x4e75
                0x10101383                _etext = .
 *(.lit)

.data           0x10101384        0x0
 *(.shdata)
 *(.data)
 .data          0x10101384        0x0 /tmp/ccbWAC0e.o
 .data          0x10101384        0x0 process.o
 .data          0x10101384        0x0 init.o
 .data          0x10101384        0x0 memory.o
 .data          0x10101384        0x0 dbug.o
 .data          0x10101384        0x0 rtx.o
 .data          0x10101384        0x0 main_rtx.o
                0x10101384                _edata = .

.bss            0x10101384     0x1134
                0x10101384                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10101384        0x0 /tmp/ccbWAC0e.o
 .bss           0x10101384        0x8 process.o
                0x10101384                current_running_process
                0x10101388                imma_epeen_process
 .bss           0x1010138c        0x4 init.o
                0x1010138c                used_blocks
 .bss           0x10101390        0x0 memory.o
 .bss           0x10101390        0x0 dbug.o
 .bss           0x10101390        0x0 rtx.o
 .bss           0x10101390        0x0 main_rtx.o
 *(COMMON)
 COMMON         0x10101390     0x1010 /tmp/ccbWAC0e.o
                0x10101390                old_stack
                0x101013a0                main_stack
 COMMON         0x101023a0       0x30 process.o
                0x101023a0                blocked_queue
                0x101023b8                ready_queue
                0x101023cc                free_blocks
 COMMON         0x101023d0        0x4 memory.o
                0x101023d0                mem_end
 COMMON         0x101023d4       0xe4 main_rtx.o
                0x101023d4                p
                0x101024b8                _end = ALIGN (0x8)
                0x101024b8                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000       0x84
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
 __REGISTER_RTX__
                0x10300000       0x84 main_rtx.o
                0x10300000                register_rtx
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
                0x10500000       0x5c
 *(__RTX_TEST_DATA__)
 __RTX_TEST_DATA__
                0x10500000       0x5c main_rtx.o
                0x10500020                g_test_proc
                0x10500000                g_test_fixture
OUTPUT(rtx.bin elf32-m68k)

.comment        0x00000000       0xea
 .comment       0x00000000       0x27 process.o
 .comment       0x00000027       0x27 init.o
 .comment       0x0000004e       0x27 memory.o
 .comment       0x00000075       0x27 dbug.o
 .comment       0x0000009c       0x27 rtx.o
 .comment       0x000000c3       0x27 main_rtx.o
