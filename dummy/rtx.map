
Allocating common symbols
Common symbol       size              file

p                   0xc4              main_rtx.o
mailboxStart        0x1c              messaging.o
blocked_queue       0x8               main_rtx.o
old_stack           0x4               /tmp/ccTadN21.o
ready_queue         0x14              main_rtx.o
mailboxEnd          0x1c              messaging.o
free_blocks         0x4               process.o
main_stack          0x1000            /tmp/ccTadN21.o
mem_end             0x4               memory.o
charOut             0x1               iprocess.o
null_p              0x1c              main_rtx.o
charIn              0x1               iprocess.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x10100000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /tmp/ccTadN21.o
LOAD /tmp/ccKrGcJT.o
LOAD /tmp/ccfvSroJ.o
LOAD process.o
LOAD init.o
LOAD memory.o
LOAD dbug.o
LOAD kcd.o
LOAD messaging.o
LOAD rtx.o
LOAD main_rtx.o
LOAD iprocess.o
START GROUP
LOAD /opt/gcc-coldfire/bin/../lib/gcc/m68k-elf/4.3.2/m5307/libgcc.a
END GROUP
                0x00000000                __DYNAMIC = 0x0
                0x00000000                PROVIDE (hardware_init_hook, 0x0)
                0x00000000                PROVIDE (_hardware_init_hook, 0x0)
                0x00000000                PROVIDE (software_init_hook, 0x0)
                0x00000000                PROVIDE (_software_init_hook, 0x0)

.text           0x10100000     0x1cb6
 *(.text)
 .text          0x10100000       0x1e /tmp/ccTadN21.o
 *fill*         0x1010001e        0x2 00
 .text          0x10100020       0x44 /tmp/ccKrGcJT.o
                0x10100020                asm_trap_entry
 .text          0x10100064       0x44 /tmp/ccfvSroJ.o
                0x10100064                asm_serial_entry
 .text          0x101000a8      0x5e2 process.o
                0x1010061c                is_waiting_for
                0x10100164                release_processor_kuma_san
                0x10100664                set_process_state
                0x101000b2                init_null_process
                0x101002e4                trap_call_animal
                0x10100280                stack_pointer_switcher
                0x101004cc                get_process_number_from_ID
                0x101000a8                null_process
                0x101005d4                process_exists
                0x1010055a                set_process_priority_yama_san
                0x1010052a                get_process_priority_usagi_san
                0x10100470                get_process_from_ID
                0x10100192                schedule_next_process
                0x10100518                get_process_ID
                0x101001a6                schedule_next_process_neko_san
 *fill*         0x1010068a        0x2 00
 .text          0x1010068c      0x2ec init.o
                0x10100720                put_to_blocked
                0x101008fe                remove_first_from_blocked
                0x1010068c                put_to_ready
                0x1010084a                remove_from_blocked
                0x101007ba                remove_from_ready
 .text          0x10100978      0x252 memory.o
                0x10100af8                initBlock
                0x10100978                s_request_memory_block_yishi
                0x101009fa                s_release_memory_block_yishi
 *fill*         0x10100bca        0x2 00
 .text          0x10100bcc       0x5c dbug.o
                0x10100bec                rtx_dbug_outs
                0x10100bcc                rtx_dbug_out_char
 .text          0x10100c28      0x5fe kcd.o
                0x10100c28                init_kcd
                0x10100cf6                kcd
                0x10100f38                handle_time_string
 *fill*         0x10101226        0x2 00
 .text          0x10101228      0x2ca messaging.o
                0x10101228                init_mailboxes
                0x10101262                send_message_jessie
                0x10101388                receive_message_jessie
                0x101014ea                delayed_send_umi_san
 *fill*         0x101014f2        0x2 00
 .text          0x101014f4      0x180 rtx.o
                0x10101646                get_process_priority
                0x10101560                request_memory_block
                0x1010160e                set_process_priority
                0x101014f4                send_message
                0x10101588                release_memory_block
                0x1010152c                receive_message
                0x101015cc                delayed_send
                0x101015b6                release_processor
 .text          0x10101674      0x3d8 main_rtx.o
                0x10101674                __main
                0x10101976                coldfire_vbr_init
                0x1010167e                main
                0x1010198e                init_interrupts
 .text          0x10101a4c       0xc2 iprocess.o
                0x10101a4c                uart_i_process
                0x10101b10                . = ALIGN (0x4)
 *fill*         0x10101b0e        0x2 00
                0x10101b10                __CTOR_LIST__ = .
                0x10101b10        0x4 LONG 0x0 (((__CTOR_END__ - __CTOR_LIST__) / 0x4) - 0x2)
 *(.ctors)
                0x10101b14        0x4 LONG 0x0
                0x10101b18                __CTOR_END__ = .
                0x10101b18                __DTOR_LIST__ = .
                0x10101b18        0x4 LONG 0x0 (((__DTOR_END__ - __DTOR_LIST__) / 0x4) - 0x2)
 *(.dtors)
                0x10101b1c        0x4 LONG 0x0
                0x10101b20                __DTOR_END__ = .
 *(.rodata*)
 .rodata        0x10101b20       0x82 process.o
 .rodata        0x10101ba2       0x22 init.o
 .rodata        0x10101bc4       0x21 memory.o
                0x10101bc5                FREE
                0x10101bc7                FAILURE
                0x10101bc6                SUCCESS
                0x10101bc4                USED
 .rodata        0x10101be5       0x20 kcd.o
 .rodata        0x10101c05       0x28 messaging.o
 .rodata        0x10101c2d       0x6b main_rtx.o
 .rodata        0x10101c98        0xe iprocess.o
 *(.gcc_except_table)
                0x10101ca6                __INIT_SECTION__ = .
                0x10101ca6        0x4 LONG 0x4e560000
 *(.init)
                0x10101caa        0x2 SHORT 0x4e5e
                0x10101cac        0x2 SHORT 0x4e75
                0x10101cae                __FINI_SECTION__ = .
                0x10101cae        0x4 LONG 0x4e560000
 *(.fini)
                0x10101cb2        0x2 SHORT 0x4e5e
                0x10101cb4        0x2 SHORT 0x4e75
                0x10101cb6                _etext = .
 *(.lit)

.data           0x10101cb8        0x0
 *(.shdata)
 *(.data)
 .data          0x10101cb8        0x0 /tmp/ccTadN21.o
 .data          0x10101cb8        0x0 /tmp/ccKrGcJT.o
 .data          0x10101cb8        0x0 /tmp/ccfvSroJ.o
 .data          0x10101cb8        0x0 process.o
 .data          0x10101cb8        0x0 init.o
 .data          0x10101cb8        0x0 memory.o
 .data          0x10101cb8        0x0 dbug.o
 .data          0x10101cb8        0x0 kcd.o
 .data          0x10101cb8        0x0 messaging.o
 .data          0x10101cb8        0x0 rtx.o
 .data          0x10101cb8        0x0 main_rtx.o
 .data          0x10101cb8        0x0 iprocess.o
                0x10101cb8                _edata = .

.bss            0x10101cb8     0x1166
                0x10101cb8                __bss_start = .
 *(.shbss)
 *(.bss)
 .bss           0x10101cb8        0x0 /tmp/ccTadN21.o
 .bss           0x10101cb8        0x0 /tmp/ccKrGcJT.o
 .bss           0x10101cb8        0x0 /tmp/ccfvSroJ.o
 .bss           0x10101cb8        0x8 process.o
                0x10101cb8                current_running_process
                0x10101cbc                prev_running_process
 .bss           0x10101cc0        0x4 init.o
                0x10101cc0                used_blocks
 .bss           0x10101cc4        0x0 memory.o
 .bss           0x10101cc4        0x0 dbug.o
 .bss           0x10101cc4        0x0 kcd.o
 .bss           0x10101cc4        0x0 messaging.o
 .bss           0x10101cc4        0x0 rtx.o
 .bss           0x10101cc4        0x0 main_rtx.o
 .bss           0x10101cc4        0x0 iprocess.o
 *(COMMON)
 *fill*         0x10101cc4        0xc 00
 COMMON         0x10101cd0     0x1010 /tmp/ccTadN21.o
                0x10101cd0                old_stack
                0x10101ce0                main_stack
 COMMON         0x10102ce0        0x4 process.o
                0x10102ce0                free_blocks
 COMMON         0x10102ce4        0x4 memory.o
                0x10102ce4                mem_end
 COMMON         0x10102ce8       0x38 messaging.o
                0x10102ce8                mailboxStart
                0x10102d04                mailboxEnd
 COMMON         0x10102d20       0xfc main_rtx.o
                0x10102d20                p
                0x10102de4                blocked_queue
                0x10102dec                ready_queue
                0x10102e00                null_p
 COMMON         0x10102e1c        0x2 iprocess.o
                0x10102e1c                charOut
                0x10102e1d                charIn
                0x10102e20                _end = ALIGN (0x8)
                0x10102e20                __end = _end

.stab
 *(.stab)

.stabstr
 *(.stabstr)

__REGISTER_RTX__
                0x10300000       0x84
                0x10300000                __REGISTER_RTX_ENTRY__ = <code 345> (.)
 *(__REGISTER_RTX__)
 __REGISTER_RTX__
                0x10300000       0x84 main_rtx.o
                0x10300000                register_rtx
                0x10380000                __REGISTER_TEST_PROCS_ENTRY__ = 0x10380000
                0x10400000                __RTX_TEST_CODE_ENTRY__ = 0x10400000

__RTX_TEST_DATA__
                0x10500000       0x5c
 *(__RTX_TEST_DATA__)
 __RTX_TEST_DATA__
                0x10500000       0x5c main_rtx.o
                0x10500020                g_test_proc
                0x10500000                g_test_fixture
OUTPUT(rtx.bin elf32-m68k)

.comment        0x00000000      0x15f
 .comment       0x00000000       0x27 process.o
 .comment       0x00000027       0x27 init.o
 .comment       0x0000004e       0x27 memory.o
 .comment       0x00000075       0x27 dbug.o
 .comment       0x0000009c       0x27 kcd.o
 .comment       0x000000c3       0x27 messaging.o
 .comment       0x000000ea       0x27 rtx.o
 .comment       0x00000111       0x27 main_rtx.o
 .comment       0x00000138       0x27 iprocess.o
